{"version":3,"sources":["mocks/handlers/user.ts","mocks/handlers/index.ts","mocks/browser.ts"],"names":["login","rest","post","req","res","ctx","status","getUserSuccess","get","json","username","getUserFailed","message","getUserError","networkError","handlers","Object","values","userHandlers","mswWorker","setupWorker"],"mappings":"8XAEaA,EAAQC,IAAKC,KAAK,UAAU,SAACC,EAAKC,EAAKC,GAClD,OAAOD,EAAIC,EAAIC,OAAO,SAGXC,EAAiBN,IAAKO,IAAI,SAAS,SAACL,EAAKC,EAAKC,GACzD,OAAOD,EACLC,EAAIC,OAAO,KACXD,EAAII,KAAK,CACPC,SAAU,cAKHC,EAAgBV,IAAKO,IAAI,SAAS,SAACL,EAAKC,EAAKC,GACxD,OAAOD,EACLC,EAAIC,OAAO,KACXD,EAAII,KAAK,CACPG,QAAS,uBAKFC,EAAeZ,IAAKO,IAAI,SAAS,SAACL,EAAKC,EAAKC,GACvD,OAAOD,EAAIU,aAAa,oBCrBXC,EAFD,YAAOC,OAAOC,OAAOC,ICEtBC,EAAYC,IAAW,WAAX,cAAeL","file":"static/js/4.8d907309.chunk.js","sourcesContent":["import { rest } from 'msw';\n\nexport const login = rest.post('/login', (req, res, ctx) => {\n  return res(ctx.status(200));\n});\n\nexport const getUserSuccess = rest.get('/user', (req, res, ctx) => {\n  return res(\n    ctx.status(200),\n    ctx.json({\n      username: 'admin',\n    }),\n  );\n});\n\nexport const getUserFailed = rest.get('/user', (req, res, ctx) => {\n  return res(\n    ctx.status(403),\n    ctx.json({\n      message: 'Not authorized',\n    }),\n  );\n});\n\nexport const getUserError = rest.get('/user', (req, res, ctx) => {\n  return res.networkError('Network Error');\n});\n","import * as userHandlers from './user';\n\nconst handlers = [...Object.values(userHandlers)];\n\nexport default handlers;\n","import { setupWorker } from 'msw';\nimport handlers from './handlers';\n\n// This configures a Service Worker with the given request handlers.\nexport const mswWorker = setupWorker(...handlers);\n"],"sourceRoot":""}