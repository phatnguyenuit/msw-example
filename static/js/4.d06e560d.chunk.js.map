{"version":3,"sources":["mocks/handlers/user.ts","mocks/handlers/index.ts","mocks/browser.ts"],"names":["login","rest","post","req","res","ctx","status","delay","getUserSuccess","get","json","message","data","username","handlers","networkError","mswWorker","setupWorker"],"mappings":"8LAEaA,EAAQC,IAAKC,KAAK,UAAU,SAACC,EAAKC,EAAKC,GAClD,OAAOD,EAAIC,EAAIC,OAAO,KAAMD,EAAIE,YAGrBC,EAAiBP,IAAKQ,IAAI,SAAS,SAACN,EAAKC,EAAKC,GACzD,OAAOD,EACLC,EAAIC,OAAO,KACXD,EAAIK,KAAK,CACPC,QAAS,kBACTC,KAAM,CACJC,SAAU,WAGdR,EAAIE,YCXOO,GDecb,IAAKQ,IAAI,SAAS,SAACN,EAAKC,EAAKC,GACxD,OAAOD,EACLC,EAAIC,OAAO,KACXD,EAAIK,KAAK,CACPC,QAAS,mBAEXN,EAAIE,YAIoBN,IAAKQ,IAAI,SAAS,SAACN,EAAKC,EAAKC,GACvD,OAAOD,EAAIW,aAAa,oBC5BT,CAACf,EAAOQ,ICEZQ,EAAYC,IAAW,WAAX,cAAeH","file":"static/js/4.d06e560d.chunk.js","sourcesContent":["import { rest } from 'msw';\n\nexport const login = rest.post('/login', (req, res, ctx) => {\n  return res(ctx.status(200), ctx.delay());\n});\n\nexport const getUserSuccess = rest.get('/user', (req, res, ctx) => {\n  return res(\n    ctx.status(200),\n    ctx.json({\n      message: 'Request success',\n      data: {\n        username: 'admin',\n      },\n    }),\n    ctx.delay(),\n  );\n});\n\nexport const getUserFailed = rest.get('/user', (req, res, ctx) => {\n  return res(\n    ctx.status(403),\n    ctx.json({\n      message: 'Not authorized',\n    }),\n    ctx.delay(),\n  );\n});\n\nexport const getUserError = rest.get('/user', (req, res, ctx) => {\n  return res.networkError('Network Error');\n});\n","import { login, getUserSuccess } from './user';\n\nconst handlers = [login, getUserSuccess];\n\nexport default handlers;\n","import { setupWorker } from 'msw';\nimport handlers from './handlers';\n\n// This configures a Service Worker with the given request handlers.\nexport const mswWorker = setupWorker(...handlers);\n"],"sourceRoot":""}